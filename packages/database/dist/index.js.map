{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import { PrismaClient } from '@prisma/client';\nimport { z } from 'zod';\n\nexport * from '@prisma/client';\n\n/////////////////////////////////////////\n// HELPER FUNCTIONS\n/////////////////////////////////////////\n\n/////////////////////////////////////////\n// ENUMS\n/////////////////////////////////////////\n\nexport const TransactionIsolationLevelSchema = z.enum([\n  'ReadUncommitted',\n  'ReadCommitted',\n  'RepeatableRead',\n  'Serializable',\n]);\n\nexport const UserScalarFieldEnumSchema = z.enum([\n  'id',\n  'email',\n  'name',\n  'password',\n  'createdAt',\n  'updatedAt',\n]);\n\nexport const CategoryScalarFieldEnumSchema = z.enum([\n  'id',\n  'name',\n  'parent_id',\n  'url',\n  'createdAt',\n  'updatedAt',\n]);\n\nexport const ProductScalarFieldEnumSchema = z.enum([\n  'id',\n  'name',\n  'url',\n  'description',\n  'price',\n  'quantity',\n  'discount',\n  'tags',\n  'categoryId',\n  'createdAt',\n  'updatedAt',\n]);\n\nexport const ProductImageScalarFieldEnumSchema = z.enum([\n  'id',\n  'url',\n  'productId',\n  'createdAt',\n  'updatedAt',\n]);\n\nexport const ProductSearchHistoryScalarFieldEnumSchema = z.enum([\n  'id',\n  'keyword',\n  'userId',\n  'ip',\n  'deviceType',\n  'location',\n  'resultsCount',\n  'newKeyword',\n  'createdAt',\n  'updatedAt',\n]);\n\nexport const SortOrderSchema = z.enum(['asc', 'desc']);\n\nexport const UserOrderByRelevanceFieldEnumSchema = z.enum([\n  'email',\n  'name',\n  'password',\n]);\n\nexport const NullsOrderSchema = z.enum(['first', 'last']);\n\nexport const CategoryOrderByRelevanceFieldEnumSchema = z.enum(['name', 'url']);\n\nexport const ProductOrderByRelevanceFieldEnumSchema = z.enum([\n  'name',\n  'url',\n  'description',\n  'tags',\n]);\n\nexport const ProductImageOrderByRelevanceFieldEnumSchema = z.enum(['url']);\n\nexport const ProductSearchHistoryOrderByRelevanceFieldEnumSchema = z.enum([\n  'keyword',\n  'ip',\n  'location',\n]);\n\nexport const DeviceTypeSchema = z.enum([\n  'DESKTOP',\n  'MOBILE',\n  'TABLET',\n  'OTHER',\n]);\n\nexport type DeviceTypeType = `${z.infer<typeof DeviceTypeSchema>}`;\n\n/////////////////////////////////////////\n// MODELS\n/////////////////////////////////////////\n\n/////////////////////////////////////////\n// USER SCHEMA\n/////////////////////////////////////////\n\nexport const UserSchema = z.object({\n  id: z.number().int().optional(),\n  email: z.string(),\n  name: z.string(),\n  password: z.string(),\n  createdAt: z.coerce.date(),\n  updatedAt: z.coerce.date(),\n});\n\n/////////////////////////////////////////\n// USER PARTIAL SCHEMA\n/////////////////////////////////////////\n\nexport const UserPartialSchema = UserSchema.partial();\n\nexport type UserPartial = z.infer<typeof UserPartialSchema>;\n\n/////////////////////////////////////////\n// CATEGORY SCHEMA\n/////////////////////////////////////////\n\nexport const CategorySchema = z.object({\n  id: z.number().int().optional(),\n  name: z.string(),\n  parent_id: z.number().int().nullable().optional(),\n  url: z.string(),\n  createdAt: z.coerce.date(),\n  updatedAt: z.coerce.date(),\n});\n\n/////////////////////////////////////////\n// CATEGORY PARTIAL SCHEMA\n/////////////////////////////////////////\n\nexport const CategoryPartialSchema = CategorySchema.partial();\n\nexport type CategoryPartial = z.infer<typeof CategoryPartialSchema>;\n\n/////////////////////////////////////////\n// PRODUCT SCHEMA\n/////////////////////////////////////////\n\nexport const ProductSchema = z.object({\n  id: z.number().int().optional(),\n  name: z.string(),\n  url: z.string(),\n  description: z.string(),\n  price: z.number(),\n  quantity: z.number().int(),\n  discount: z.number(),\n  tags: z.string().nullable(),\n  categoryId: z.number().int().optional(),\n  createdAt: z.coerce.date(),\n  updatedAt: z.coerce.date(),\n});\n\n/////////////////////////////////////////\n// PRODUCT PARTIAL SCHEMA\n/////////////////////////////////////////\n\nexport const ProductPartialSchema = ProductSchema.partial();\n\nexport type ProductPartial = z.infer<typeof ProductPartialSchema>;\n\n/////////////////////////////////////////\n// PRODUCT IMAGE SCHEMA\n/////////////////////////////////////////\n\nexport const ProductImageSchema = z.object({\n  id: z.number().int().optional(),\n  url: z.string(),\n  productId: z.number().int().optional(),\n  createdAt: z.coerce.date(),\n  updatedAt: z.coerce.date(),\n});\n\n/////////////////////////////////////////\n// PRODUCT IMAGE PARTIAL SCHEMA\n/////////////////////////////////////////\n\nexport const ProductImagePartialSchema = ProductImageSchema.partial();\n\nexport type ProductImagePartial = z.infer<typeof ProductImagePartialSchema>;\n\n/////////////////////////////////////////\n// PRODUCT SEARCH HISTORY SCHEMA\n/////////////////////////////////////////\n\nexport const ProductSearchHistorySchema = z.object({\n  deviceType: DeviceTypeSchema,\n  id: z.number().int().optional(),\n  keyword: z.string(),\n  userId: z.number().int().nullable(),\n  ip: z.string(),\n  location: z.string().nullable(),\n  resultsCount: z.number().int(),\n  newKeyword: z.boolean(),\n  createdAt: z.coerce.date(),\n  updatedAt: z.coerce.date(),\n});\n\n/////////////////////////////////////////\n// PRODUCT SEARCH HISTORY PARTIAL SCHEMA\n/////////////////////////////////////////\n\nexport const ProductSearchHistoryPartialSchema =\n  ProductSearchHistorySchema.partial();\n\nexport type ProductSearchHistoryPartial = z.infer<\n  typeof ProductSearchHistoryPartialSchema\n>;\nexport const prisma = new PrismaClient();\nexport const ProductIdSchema = ProductSchema.pick({ id: true });\nexport const ProductImageIdSchema = ProductImageSchema.pick({ id: true });\nexport const CategoryIdSchema = CategorySchema.pick({ id: true });\nexport const UserIdSchema = UserSchema.pick({ id: true });\nexport const ProductSearchHistoryIdSchema = ProductSearchHistorySchema.pick({\n  id: true,\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA6B;AAC7B,iBAAkB;AAElB,wBAAc,2BAHd;AAaO,IAAM,kCAAkC,aAAE,KAAK;AAAA,EACpD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,CAAC;AAEM,IAAM,4BAA4B,aAAE,KAAK;AAAA,EAC9C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,CAAC;AAEM,IAAM,gCAAgC,aAAE,KAAK;AAAA,EAClD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,CAAC;AAEM,IAAM,+BAA+B,aAAE,KAAK;AAAA,EACjD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,CAAC;AAEM,IAAM,oCAAoC,aAAE,KAAK;AAAA,EACtD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,CAAC;AAEM,IAAM,4CAA4C,aAAE,KAAK;AAAA,EAC9D;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,CAAC;AAEM,IAAM,kBAAkB,aAAE,KAAK,CAAC,OAAO,MAAM,CAAC;AAE9C,IAAM,sCAAsC,aAAE,KAAK;AAAA,EACxD;AAAA,EACA;AAAA,EACA;AACF,CAAC;AAEM,IAAM,mBAAmB,aAAE,KAAK,CAAC,SAAS,MAAM,CAAC;AAEjD,IAAM,0CAA0C,aAAE,KAAK,CAAC,QAAQ,KAAK,CAAC;AAEtE,IAAM,yCAAyC,aAAE,KAAK;AAAA,EAC3D;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,CAAC;AAEM,IAAM,8CAA8C,aAAE,KAAK,CAAC,KAAK,CAAC;AAElE,IAAM,sDAAsD,aAAE,KAAK;AAAA,EACxE;AAAA,EACA;AAAA,EACA;AACF,CAAC;AAEM,IAAM,mBAAmB,aAAE,KAAK;AAAA,EACrC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,CAAC;AAYM,IAAM,aAAa,aAAE,OAAO;AAAA,EACjC,IAAI,aAAE,OAAO,EAAE,IAAI,EAAE,SAAS;AAAA,EAC9B,OAAO,aAAE,OAAO;AAAA,EAChB,MAAM,aAAE,OAAO;AAAA,EACf,UAAU,aAAE,OAAO;AAAA,EACnB,WAAW,aAAE,OAAO,KAAK;AAAA,EACzB,WAAW,aAAE,OAAO,KAAK;AAC3B,CAAC;AAMM,IAAM,oBAAoB,WAAW,QAAQ;AAQ7C,IAAM,iBAAiB,aAAE,OAAO;AAAA,EACrC,IAAI,aAAE,OAAO,EAAE,IAAI,EAAE,SAAS;AAAA,EAC9B,MAAM,aAAE,OAAO;AAAA,EACf,WAAW,aAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS;AAAA,EAChD,KAAK,aAAE,OAAO;AAAA,EACd,WAAW,aAAE,OAAO,KAAK;AAAA,EACzB,WAAW,aAAE,OAAO,KAAK;AAC3B,CAAC;AAMM,IAAM,wBAAwB,eAAe,QAAQ;AAQrD,IAAM,gBAAgB,aAAE,OAAO;AAAA,EACpC,IAAI,aAAE,OAAO,EAAE,IAAI,EAAE,SAAS;AAAA,EAC9B,MAAM,aAAE,OAAO;AAAA,EACf,KAAK,aAAE,OAAO;AAAA,EACd,aAAa,aAAE,OAAO;AAAA,EACtB,OAAO,aAAE,OAAO;AAAA,EAChB,UAAU,aAAE,OAAO,EAAE,IAAI;AAAA,EACzB,UAAU,aAAE,OAAO;AAAA,EACnB,MAAM,aAAE,OAAO,EAAE,SAAS;AAAA,EAC1B,YAAY,aAAE,OAAO,EAAE,IAAI,EAAE,SAAS;AAAA,EACtC,WAAW,aAAE,OAAO,KAAK;AAAA,EACzB,WAAW,aAAE,OAAO,KAAK;AAC3B,CAAC;AAMM,IAAM,uBAAuB,cAAc,QAAQ;AAQnD,IAAM,qBAAqB,aAAE,OAAO;AAAA,EACzC,IAAI,aAAE,OAAO,EAAE,IAAI,EAAE,SAAS;AAAA,EAC9B,KAAK,aAAE,OAAO;AAAA,EACd,WAAW,aAAE,OAAO,EAAE,IAAI,EAAE,SAAS;AAAA,EACrC,WAAW,aAAE,OAAO,KAAK;AAAA,EACzB,WAAW,aAAE,OAAO,KAAK;AAC3B,CAAC;AAMM,IAAM,4BAA4B,mBAAmB,QAAQ;AAQ7D,IAAM,6BAA6B,aAAE,OAAO;AAAA,EACjD,YAAY;AAAA,EACZ,IAAI,aAAE,OAAO,EAAE,IAAI,EAAE,SAAS;AAAA,EAC9B,SAAS,aAAE,OAAO;AAAA,EAClB,QAAQ,aAAE,OAAO,EAAE,IAAI,EAAE,SAAS;AAAA,EAClC,IAAI,aAAE,OAAO;AAAA,EACb,UAAU,aAAE,OAAO,EAAE,SAAS;AAAA,EAC9B,cAAc,aAAE,OAAO,EAAE,IAAI;AAAA,EAC7B,YAAY,aAAE,QAAQ;AAAA,EACtB,WAAW,aAAE,OAAO,KAAK;AAAA,EACzB,WAAW,aAAE,OAAO,KAAK;AAC3B,CAAC;AAMM,IAAM,oCACX,2BAA2B,QAAQ;AAK9B,IAAM,SAAS,IAAI,2BAAa;AAChC,IAAM,kBAAkB,cAAc,KAAK,EAAE,IAAI,KAAK,CAAC;AACvD,IAAM,uBAAuB,mBAAmB,KAAK,EAAE,IAAI,KAAK,CAAC;AACjE,IAAM,mBAAmB,eAAe,KAAK,EAAE,IAAI,KAAK,CAAC;AACzD,IAAM,eAAe,WAAW,KAAK,EAAE,IAAI,KAAK,CAAC;AACjD,IAAM,+BAA+B,2BAA2B,KAAK;AAAA,EAC1E,IAAI;AACN,CAAC;",
  "names": []
}
